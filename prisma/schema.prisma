generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(cuid())
  name          String
  image         String
  phone         String?
  streetAddress String?
  postalCode    String?
  city          String?
  country       String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  role          UserRole       @default(USER)
  clerkId       String         @unique
  email         String         @unique
  orders        Order[]
  orderProducts OrderProduct[]
}

model Product {
  id          String         @id @default(cuid())
  name        String
  description String
  image       String
  order       Int            @default(autoincrement())
  basePrice   Float
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  categoryId  String
  extras      Extra[]
  orders      OrderProduct[]
  category    Category       @relation(fields: [categoryId], references: [id])
  sizes       Size[]
}

model Size {
  id        String       @id @default(cuid())
  name      ProductSizes
  price     Float
  productId String
  product   Product      @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Extra {
  id        String           @id @default(cuid())
  name      ExtraIngredients
  price     Float
  productId String
  product   Product          @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Category {
  id       String    @id @default(uuid())
  name     String
  order    Int       @default(autoincrement())
  products Product[]
}

model Order {
  id            String         @id @default(uuid())
  paid          Boolean        @default(false)
  subTotal      Float
  deliveryFee   Float
  totalPrice    Float
  userEmail     String
  name          String?
  phone         String?
  streetAddress String?
  postalCode    String?
  city          String?
  country       String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  products      OrderProduct[]
  userId        String
  user          User           @relation(fields: [userId], references: [id])
}

model OrderProduct {
  id        String  @id @default(cuid())
  quantity  Int
  orderId   String
  userId    String?
  productId String
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  user      User?   @relation(fields: [userId], references: [id])
}

enum UserRole {
  USER
  ADMIN
}

enum ProductSizes {
  SMALL
  MEDIUM
  LARGE
}

enum ExtraIngredients {
  CHEESE
  BACON
  TOMATO
  ONION
  PEPPER
}
